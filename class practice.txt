// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;


// contract Task1{
//     uint num = 20;


//     function setNum()public {
//         num = 30;
//     }
//     function getNum()public  view returns(uint){
//         return  num;
//     }
// }


// contract task2{
//  uint num1;


//  function setNum(uint _a)public {
//      num1 = _a;
//  }   
//  function getNum()public view returns(uint){
//      return num1;
//  }
// }



// contract task3{
//     function evaulate(uint _a,uint _b)public {

//     }
// }


// contract task4{
//     function reminder(uint _a)public pure  returns (uint) {
//         require(_a>0,"Not a require number");
//         return  _a%3;
//     }
// }


// contract  task4 {
    
// uint num = 124;
// uint digit;
// uint sum = 0;

// function sumDigi()public{
//     while (num>0){
//         digit = num%10;
//         sum += digit;
//         num /=num;
//     }
// }

// function getSum()public  view  returns ( uint){
//     return sum;
// }

// }



// contract PRIM{
//     function prime(uint _n) public pure returns(string memory) {
//         for (uint i=2;i<=_n/2;i++){
//             if(_n%i==0){
//                 return  "Not a prime number";
//             }
//             else {
//                 return "It is a prime";
//             }
//         }
//     }
// }



// contract sumOfDidigits{
//     uint sum =0;
//     uint number = 1246;
//     uint digit;
//     function setDigit()public{
//         while (number>0){
//             digit = number%10;
//             sum += digit;
//             number /= 10;
//         }
//     }

//     function getSum()public  view returns(uint){
//         return sum;

// }
// }


// contract Prime{
// uint num;
// bool flag = false;
//     function prime(uint _num)public {
//         num = _num;
//         for (uint i=2;i<=num/2;i++){
//             if (num%i==0){
//                 flag = true;
//                 break;
//             }
//         }
// }
// function getResult()public view returns (string memory){
//     if (!flag){
//         return "It is a prime number";
//     }
//     else {
//         return "It is not a prime number";
//     }
// }

// }



////////////////// Leap year //////////////////

// contract LeapYear{

// uint year = 2019;
// bool leap = false;

// function setLeap()public {
//     if(year%4==0){
//         if(year%100==0){
//             if (year%400==0){
//                 leap = true;
//             }
//             else {
//                 leap = false;
//             }
//         }
//         else {
//             leap = true;
//         }
//     }
//     else {
//         leap = false;
//     }
   
// }

// function getLeapVal()public view returns (string memory) {
//     if(!leap){
//         return "It is not a leap year";
//     }
//     else {
//         return "It is a leap year";
//     }
// }

// }

///////////////////////////  factorial number ///////////////


// contract Factorial{

//     uint numb = 4;
//     uint factorial = 1;


//     function setFactorial()public {
//         for(uint i=1;i<=numb;i++){
//             factorial *=i;
//         }
//     }

//     function getFactorial()public view returns (uint){
//         return factorial;
//     }
// }



///////////////////////// Fabiconal series //////////////////////



// contract Fabiconal{

// function setFabiconalNumb()public pure returns (uint) {
//     uint n = 7;
//     uint a = 0;
//     uint b=1;
//     uint count =1;
//     while (count<=n){
//     uint temp =b;
//     b = b+a;
//     a = temp;
//     count++;
//     }
//     return b;
// }
// function getFabiconalNumb()public  view returns (uint){
//     return b;
// }
