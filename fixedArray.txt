// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;



contract fixedArray{
    uint[5] public arr4;
    constructor(){
        arr4 = [1,2,3,4,5];
    }
    // uint [5] public arr = [1,2,3,4,5];
// uint[5] public arr2;
    // function funArr()public view returns(uint){
        // uint temp;
        // get //
        // temp = arr[3];

        // update //
        // arr[2] = 100;
        // delete //
        // delete arr[4];

        /// length ///

    //     uint len;
    //   len = arr.length;
    //   return len;

    // }

// function AddInArr(uint _x)public{
//     for(uint i=0;i<arr2.length;i++){
//         arr2[i] = _x+i;
//     }
// }


// function createArr()public pure returns(uint){
//     uint[] memory arr3 = new uint[](3);
//     arr3[2]= 34;
//     return arr3[1];
// }

function getArr()public view returns(uint[5] memory){
    return arr4;
}

}